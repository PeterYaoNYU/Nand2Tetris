// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Mux(a=a[0], b=b[0], sel=sel[1], out=temp1[0]);
    
    // Mux(a=a[0], b=b[0], sel=sel[1], out=temp1[0]);
    // Mux(a=a[1], b=b[1], sel=sel[1], out=temp1[1]);
    // Mux(a=a[2], b=b[2], sel=sel[1], out=temp1[2]);
    // Mux(a=a[3], b=b[3], sel=sel[1], out=temp1[3]);
    // Mux(a=a[4], b=b[4], sel=sel[1], out=temp1[4]);
    // Mux(a=a[5], b=b[5], sel=sel[1], out=temp1[5]);
    // Mux(a=a[6], b=b[6], sel=sel[1], out=temp1[6]);
    // Mux(a=a[7], b=b[7], sel=sel[1], out=temp1[7]);
    // Mux(a=a[8], b=b[8], sel=sel[1], out=temp1[8]);
    // Mux(a=a[9], b=b[9], sel=sel[1], out=temp1[9]);
    // Mux(a=a[10], b=b[10], sel=sel[1], out=temp1[10]);
    // Mux(a=a[11], b=b[11], sel=sel[1], out=temp1[11]);
    // Mux(a=a[12], b=b[12], sel=sel[1], out=temp1[12]);
    // Mux(a=a[13], b=b[13], sel=sel[1], out=temp1[13]);
    // Mux(a=a[14], b=b[14], sel=sel[1], out=temp1[14]);
    // Mux(a=a[15], b=b[15], sel=sel[1], out=temp1[15]);

    // Mux(a=c[0], b=d[0], sel=sel[1], out=temp2[0]);
    // Mux(a=c[1], b=d[1], sel=sel[1], out=temp2[1]);
    // Mux(a=c[2], b=d[2], sel=sel[1], out=temp2[2]);
    // Mux(a=c[3], b=d[3], sel=sel[1], out=temp2[3]);
    // Mux(a=c[4], b=d[4], sel=sel[1], out=temp2[4]);
    // Mux(a=c[5], b=d[5], sel=sel[1], out=temp2[5]);
    // Mux(a=c[6], b=d[6], sel=sel[1], out=temp2[6]);
    // Mux(a=c[7], b=d[7], sel=sel[1], out=temp2[7]);
    // Mux(a=c[8], b=d[8], sel=sel[1], out=temp2[8]);
    // Mux(a=c[9], b=d[9], sel=sel[1], out=temp2[9]);
    // Mux(a=c[10], b=d[10], sel=sel[1], out=temp2[10]);
    // Mux(a=c[11], b=d[11], sel=sel[1], out=temp2[11]);
    // Mux(a=c[12], b=d[12], sel=sel[1], out=temp2[12]);
    // Mux(a=c[13], b=d[13], sel=sel[1], out=temp2[13]);
    // Mux(a=c[14], b=d[14], sel=sel[1], out=temp2[14]);
    // Mux(a=c[15], b=d[15], sel=sel[1], out=temp2[15]);
    // // Mux(a=c, b=d, sel=sel[1], out=temp2);


    // // Mux(a=temp1, b=temp2, sel=sel[0], out=out);
    // Mux(a=temp1[0], b=temp2[0], sel=sel[0], out=out[0]);
    // Mux(a=temp1[1], b=temp2[1], sel=sel[0], out=out[1]);
    // Mux(a=temp1[2], b=temp2[2], sel=sel[0], out=out[2]);
    // Mux(a=temp1[3], b=temp2[3], sel=sel[0], out=out[3]);
    // Mux(a=temp1[4], b=temp2[4], sel=sel[0], out=out[4]);
    // Mux(a=temp1[5], b=temp2[5], sel=sel[0], out=out[5]);
    // Mux(a=temp1[6], b=temp2[6], sel=sel[0], out=out[6]);
    // Mux(a=temp1[7], b=temp2[7], sel=sel[0], out=out[7]);
    // Mux(a=temp1[8], b=temp2[8], sel=sel[0], out=out[8]);
    // Mux(a=temp1[9], b=temp2[9], sel=sel[0], out=out[9]);
    // Mux(a=temp1[10], b=temp2[10], sel=sel[0], out=out[10]);
    // Mux(a=temp1[11], b=temp2[11], sel=sel[0], out=out[11]);
    // Mux(a=temp1[12], b=temp2[12], sel=sel[0], out=out[12]);
    // Mux(a=temp1[13], b=temp2[13], sel=sel[0], out=out[13]);
    // Mux(a=temp1[14], b=temp2[14], sel=sel[0], out=out[14]);
    // Mux(a=temp1[15], b=temp2[15], sel=sel[0], out=out[15]);
    Mux16(a=a, b=b, sel=sel[0], out=temp1);
    Mux16(a=c, b=d, sel=sel[0], out=temp2);
    Mux16(a=temp1, b=temp2, sel=sel[1], out=out);

    // Put your code here:
}